grammar TimerCommands

command       <- startCommand / stopCommand / createCommand
startCommand  <- "start" (__ timerName)? <StartCommand>
stopCommand   <- stopWords (__ timerName)? <StopCommand>
createCommand <- ("new" __)? duration:timerDef (__ "timer")? (__ name:description)? <CreateCommand>
timerDef      <- minutes:minutesDef (__ (and __)? seconds:secondsDef)? %d
#timerDef      <- minutes:minutesDef (__ (and __)? seconds:secondsDef)? <Duration>
#               / (minutes:minutesDef __ (and __)?)? seconds:secondsDef
# hoursDef     <- number (__ andHalf)? __ "hour" "s"? (__ andHalf)?
# minutesDef    <- number (__ andHalf)? __ "minute" "s"? (__ andHalf)?
# secondsDef    <- number (__ andHalf)? __ "second" "s"? (__ andHalf)?
minutesDef    <- digits (__ andHalf)? __ "minute" "s"? (__ andHalf)?
secondsDef    <- digits (__ andHalf)? __ "second" "s"? (__ andHalf)?
description   <- ("for" (__ "the")? __)? timerName
timerName     <- [a-z0-9] [a-z0-9 ]* <data>
# map either '1' or 'one'
number        <- digits / digitWord
digits        <- [1-9] [0-9]? <number>
digitWord     <- "one" / "two" / "three" / "four" / "five"
               / "six" / "seven" / "eight" / "nine" <digitWord>
and           <- "and"
andHalf       <- "and a half"
stopWords     <- "stop" / "pause"
__            <- " "+
